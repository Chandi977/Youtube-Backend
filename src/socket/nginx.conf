worker_processes auto;
rtmp_auto_push on;
events {}

rtmp {
    server {
        listen 1935; # Listens for incoming RTMP streams from OBS etc.
        chunk_size 4096;

        # Live streaming application
        application live {
            live on;
            record off; # Can be set to 'all' to record streams to .flv files

            # HLS (HTTP Live Streaming) for web playback
            hls on;
            hls_path /tmp/hls; # Directory to store HLS files (.m3u8 and .ts)
            hls_fragment 3s;
            hls_playlist_length 15s;
            hls_nested on; # Creates a subdirectory for each stream key

            # --- Advanced: Hooks for your backend ---
            # These can be used to verify stream keys and update stream status in your DB.
            # Your Node.js app would need endpoints to handle these POST requests from Nginx.
            # on_publish http://app:8000/api/v1/livestreams/on_publish;
            # on_publish_done http://app:8000/api/v1/livestreams/on_publish_done;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    default_type application/octet-stream;

    server {
        listen 80;

        # Proxy all API and Socket.IO requests to the Node.js app
        location / {
            proxy_pass http://app:8000; # 'app' is the service name in docker-compose
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Required for WebSockets
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        # Serve HLS files for web players (e.g., hls.js, Video.js)
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*' always; # Allow CORS for HLS playback
        }
    }
}